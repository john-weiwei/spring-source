<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            <!--加载spring配置，首先加载一个spring容器-->
            classpath:spring.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>ServicePlatform.root</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
        <!--<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>-->
    </listener>

    <servlet>
        <servlet-name>spring-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--springmvc的配置文件，然后再加载一个DispatcherServlet容器 -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-dispatcher.xml</param-value>
        </init-param>
<!--      load-on-startup 参数值表示随着容器的启动而启动，数值越小，优先级越高  -->
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

<!--  这样在spring里面就有两个容器，一个是spring容器，一个是DispatcherServlet容器（即Servlet容器）  -->
</web-app>
